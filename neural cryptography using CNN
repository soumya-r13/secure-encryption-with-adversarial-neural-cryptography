{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RtvQm0G3ssAh",
        "outputId": "6f246d4e-f101-4151-f651-db38ce6c9c1c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:From /usr/local/lib/python3.10/dist-packages/tensorflow/python/compat/v2_compat.py:108: disable_resource_variables (from tensorflow.python.ops.variable_scope) is deprecated and will be removed in a future version.\n",
            "Instructions for updating:\n",
            "non-resource variables are not supported in the long term\n"
          ]
        }
      ],
      "source": [
        "import tensorflow.compat.v1 as tf\n",
        "tf.disable_v2_behavior()\n",
        "import numpy as np\n",
        "\n",
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Importing Pandas as pd\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XIicvhJ4svc3"
      },
      "outputs": [],
      "source": [
        "learning_rate   = 0.0008\n",
        "batch_size      = 256\n",
        "sample_size     = 8192 # 4096 according to the paper\n",
        "epochs          = 500 # 850000 according to the paper\n",
        "steps_per_epoch = int(sample_size/batch_size)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mUkVLSmysxvL"
      },
      "outputs": [],
      "source": [
        "TEXT_SIZE = 128\n",
        "KEY_SIZE  = 128"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "bMpYDNcJs0UW"
      },
      "outputs": [],
      "source": [
        "# Training parameters.\n",
        "ITERS_PER_ACTOR = 1\n",
        "EVE_MULTIPLIER = 2  # Train Eve 2x for every step of Alice/Bob"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "If3joSGAs5pW"
      },
      "outputs": [],
      "source": [
        "# Set a random seed to help reproduce the output\n",
        "seed = 7919\n",
        "tf.set_random_seed(seed)\n",
        "np.random.seed(seed)\n",
        "\n",
        "# False if we want to train from scratch and true to contiune training a already trained model\n",
        "restore_trained_model = False\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oyx53_g7s9ir"
      },
      "outputs": [],
      "source": [
        "\n",
        "def random_bools(sample_size, n):\n",
        "\n",
        "  temp =  np.random.random_integers(0, high=1, size=[sample_size, n])\n",
        "  temp = temp*2 - 1\n",
        "  return temp.astype(np.float32)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "RYNqte84tHDo"
      },
      "outputs": [],
      "source": [
        "def model(collection, message, key=None):\n",
        "\n",
        "  if key is not None:\n",
        "    combined_message = tf.concat(axis=1,\n",
        "      values=[message, key])\n",
        "  else:\n",
        "    combined_message = message\n",
        "\n",
        "  with tf.variable_scope(collection):\n",
        "    fc    = tf.layers.dense( combined_message, TEXT_SIZE + KEY_SIZE, activation=tf.nn.relu)\n",
        "    fc = tf.expand_dims(fc, 2)\n",
        "\n",
        "    # tf.contrib.layers.conv1d( input, filters, kernel_size, stride, padding, activation_fn)\n",
        "    conv1 = tf.layers.conv1d( fc, filters= 2, kernel_size= 4, strides= 1, padding='SAME',  activation=tf.nn.sigmoid)\n",
        "    conv2 = tf.layers.conv1d( conv1, filters= 4, kernel_size= 2, strides=2, padding='VALID', activation=tf.nn.sigmoid)\n",
        "    conv3 = tf.layers.conv1d( conv2, filters= 4, kernel_size= 1, strides=1, padding='SAME',  activation=tf.nn.sigmoid)\n",
        "\n",
        "    # output\n",
        "    conv4 = tf.layers.conv1d( conv3, filters= 1, kernel_size= 1, strides=1, padding='SAME',  activation=tf.nn.tanh)\n",
        "\n",
        "\n",
        "    out   = tf.squeeze(conv4, 2)\n",
        "  return out"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XM2lIEk0tJb3",
        "outputId": "d2a51e2b-0219-44b4-bbb4-5aae1d0a4ff5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-2b8f4b2b92ca>:10: UserWarning: `tf.layers.dense` is deprecated and will be removed in a future version. Please use `tf.keras.layers.Dense` instead.\n",
            "  fc    = tf.layers.dense( combined_message, TEXT_SIZE + KEY_SIZE, activation=tf.nn.relu)\n",
            "<ipython-input-7-2b8f4b2b92ca>:14: UserWarning: `tf.layers.conv1d` is deprecated and will be removed in a future version. Please Use `tf.keras.layers.Conv1D` instead.\n",
            "  conv1 = tf.layers.conv1d( fc, filters= 2, kernel_size= 4, strides= 1, padding='SAME',  activation=tf.nn.sigmoid)\n",
            "<ipython-input-7-2b8f4b2b92ca>:15: UserWarning: `tf.layers.conv1d` is deprecated and will be removed in a future version. Please Use `tf.keras.layers.Conv1D` instead.\n",
            "  conv2 = tf.layers.conv1d( conv1, filters= 4, kernel_size= 2, strides=2, padding='VALID', activation=tf.nn.sigmoid)\n",
            "<ipython-input-7-2b8f4b2b92ca>:16: UserWarning: `tf.layers.conv1d` is deprecated and will be removed in a future version. Please Use `tf.keras.layers.Conv1D` instead.\n",
            "  conv3 = tf.layers.conv1d( conv2, filters= 4, kernel_size= 1, strides=1, padding='SAME',  activation=tf.nn.sigmoid)\n",
            "<ipython-input-7-2b8f4b2b92ca>:19: UserWarning: `tf.layers.conv1d` is deprecated and will be removed in a future version. Please Use `tf.keras.layers.Conv1D` instead.\n",
            "  conv4 = tf.layers.conv1d( conv3, filters= 1, kernel_size= 1, strides=1, padding='SAME',  activation=tf.nn.tanh)\n"
          ]
        }
      ],
      "source": [
        "Alice_input_message  = tf.placeholder(tf.float32, shape=(batch_size, TEXT_SIZE), name='Alice_input_message')\n",
        "Alice_input_key      = tf.placeholder(tf.float32, shape=(batch_size, KEY_SIZE), name='Alice_input_key')\n",
        "\n",
        "\n",
        "\n",
        "Alice_out_cipher = model('Alice', Alice_input_message, Alice_input_key)\n",
        "Bob_out_message  = model('Bob', Alice_out_cipher, Alice_input_key)\n",
        "Eve_out_message  = model('Eve', Alice_out_cipher)\n",
        "\n",
        "\n",
        "## Eves LOSS\n",
        "Eves_loss = (1/batch_size)*tf.reduce_sum( tf.abs( Eve_out_message - Alice_input_message ))\n",
        "\n",
        "## ALICE AND BOB LOSS\n",
        "Bob_loss = (1/batch_size)*tf.reduce_sum( tf.abs( Bob_out_message  - Alice_input_message ))\n",
        "Eve_evadropping_loss = tf.reduce_sum( tf.square(float(TEXT_SIZE) / 2.0 - Eves_loss) / ((TEXT_SIZE / 2)**2) )\n",
        "\n",
        "Alice_bob_loss = Bob_loss + Eve_evadropping_loss\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qkVY5pYwtRXZ"
      },
      "outputs": [],
      "source": [
        "# Get tensors to train\n",
        "Alice_vars =  tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES,scope='Alice')\n",
        "Bob_vars   =  tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES,scope='Bob')\n",
        "Eve_vars   =  tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='Eve')\n",
        "\n",
        "Eve_opt  = tf.train.AdamOptimizer(learning_rate=learning_rate, beta1=0.9, epsilon=1e-08).minimize(Eves_loss, var_list=[Eve_vars])\n",
        "bob_opt  = tf.train.AdamOptimizer(learning_rate=learning_rate, beta1=0.9, epsilon=1e-08).minimize(Alice_bob_loss, var_list=[Alice_vars + Bob_vars])\n",
        "\n",
        "\n",
        "sess = tf.Session()\n",
        "init = tf.global_variables_initializer()\n",
        "sess.run(init)\n",
        "\n",
        "alice_saver = tf.train.Saver(Alice_vars)\n",
        "bob_saver   = tf.train.Saver(Bob_vars)\n",
        "eve_saver   = tf.train.Saver(Eve_vars)\n",
        "\n",
        "\n",
        "if restore_trained_model:\n",
        "  alice_saver.restore(sess, \"weights/alice_weights/model.ckpt\")\n",
        "  bob_saver.restore(sess, \"weights/bob_weights/model.ckpt\")\n",
        "  eve_saver.restore(sess, \"weights/eve_weights/model.ckpt\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x3w6D9bltWtH",
        "outputId": "5bde82af-1402-48b7-d0d4-dc4aaa646901"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-6-ad4b240f7772>:3: DeprecationWarning: This function is deprecated. Please call randint(0, 1 + 1) instead\n",
            "  temp =  np.random.random_integers(0, high=1, size=[sample_size, n])\n"
          ]
        }
      ],
      "source": [
        "# DATASET\n",
        "messages = random_bools(sample_size, TEXT_SIZE)\n",
        "keys     = random_bools(sample_size, KEY_SIZE)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lb9pgUTvtYkI",
        "outputId": "e05d29cd-235b-45d8-f127-d00cf0c7318c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  epochs:  0   bob bit error:  63.933887  +  1.0023321    & eve bit error: 64.037315\n",
            "  epochs:  1   bob bit error:  63.934082  +  1.0024725    & eve bit error: 64.03954\n",
            "  epochs:  2   bob bit error:  63.93419  +  1.00259    & eve bit error: 64.041405\n",
            "  epochs:  3   bob bit error:  63.933975  +  1.0026854    & eve bit error: 64.04293\n",
            "  epochs:  4   bob bit error:  63.933132  +  1.0027637    & eve bit error: 64.044174\n",
            "  epochs:  5   bob bit error:  63.931  +  1.0028349    & eve bit error: 64.0453\n",
            "  epochs:  6   bob bit error:  63.92573  +  1.0028893    & eve bit error: 64.046165\n",
            "  epochs:  7   bob bit error:  63.911232  +  1.0028014    & eve bit error: 64.04466\n",
            "  epochs:  8   bob bit error:  63.863346  +  1.0019355    & eve bit error: 64.03023\n",
            "  epochs:  9   bob bit error:  63.667458  +  0.9953986    & eve bit error: 63.92121\n",
            "  epochs:  10   bob bit error:  62.901062  +  0.9276773    & eve bit error: 62.76942\n",
            "  epochs:  11   bob bit error:  60.96454  +  0.563441    & eve bit error: 55.830948\n",
            "  epochs:  12   bob bit error:  57.691498  +  0.1371986    & eve bit error: 43.607204\n",
            "  epochs:  13   bob bit error:  53.272835  +  0.0001444716    & eve bit error: 32.18674\n",
            "  epochs:  14   bob bit error:  48.034412  +  0.0510711    & eve bit error: 24.619345\n",
            "  epochs:  15   bob bit error:  42.230556  +  0.14668207    & eve bit error: 19.627594\n",
            "  epochs:  16   bob bit error:  36.30358  +  0.24670857    & eve bit error: 16.005861\n",
            "  epochs:  17   bob bit error:  30.71165  +  0.34332973    & eve bit error: 13.159453\n",
            "  epochs:  18   bob bit error:  25.678717  +  0.43521452    & eve bit error: 10.805891\n",
            "  epochs:  19   bob bit error:  21.28267  +  0.5230324    & eve bit error: 8.783348\n",
            "  epochs:  20   bob bit error:  17.565666  +  0.59958714    & eve bit error: 7.1625357\n",
            "  epochs:  21   bob bit error:  14.4908  +  0.6679954    & eve bit error: 5.79563\n",
            "  epochs:  22   bob bit error:  11.996887  +  0.7254181    & eve bit error: 4.705039\n",
            "  epochs:  23   bob bit error:  10.013733  +  0.77213174    & eve bit error: 3.8496199\n",
            "  epochs:  24   bob bit error:  8.463595  +  0.8060053    & eve bit error: 3.2484374\n",
            "  epochs:  25   bob bit error:  7.24926  +  0.8304603    & eve bit error: 2.8191886\n",
            "  epochs:  26   bob bit error:  6.2794685  +  0.84992737    & eve bit error: 2.4840343\n",
            "  epochs:  27   bob bit error:  5.4965024  +  0.8657061    & eve bit error: 2.2135987\n",
            "  epochs:  28   bob bit error:  4.8588567  +  0.87914366    & eve bit error: 1.9843802\n",
            "  epochs:  29   bob bit error:  4.3394856  +  0.8902101    & eve bit error: 1.796196\n",
            "  epochs:  30   bob bit error:  3.9059525  +  0.8994624    & eve bit error: 1.64159\n",
            "  epochs:  31   bob bit error:  3.5332234  +  0.9078151    & eve bit error: 1.5031886\n",
            "  epochs:  32   bob bit error:  3.2146592  +  0.9145443    & eve bit error: 1.390182\n",
            "  epochs:  33   bob bit error:  2.9417028  +  0.920593    & eve bit error: 1.2897984\n",
            "  epochs:  34   bob bit error:  2.7022915  +  0.9258906    & eve bit error: 1.2025397\n",
            "  epochs:  35   bob bit error:  2.4919472  +  0.9302189    & eve bit error: 1.1308064\n",
            "  epochs:  36   bob bit error:  2.3078697  +  0.9339266    & eve bit error: 1.0696678\n",
            "  epochs:  37   bob bit error:  2.1451578  +  0.93696815    & eve bit error: 1.0192841\n",
            "  epochs:  38   bob bit error:  1.998963  +  0.93948025    & eve bit error: 0.97785157\n",
            "  epochs:  39   bob bit error:  1.8686919  +  0.9417652    & eve bit error: 0.94121134\n",
            "  epochs:  40   bob bit error:  1.7518194  +  0.9434997    & eve bit error: 0.91305363\n",
            "  epochs:  41   bob bit error:  1.6469333  +  0.9447016    & eve bit error: 0.8937514\n",
            "  epochs:  42   bob bit error:  1.5520692  +  0.94549143    & eve bit error: 0.88102436\n",
            "  epochs:  43   bob bit error:  1.4666011  +  0.94586676    & eve bit error: 0.874757\n",
            "  epochs:  44   bob bit error:  1.388992  +  0.94575757    & eve bit error: 0.8764736\n",
            "  epochs:  45   bob bit error:  1.3164134  +  0.9452757    & eve bit error: 0.884779\n",
            "  epochs:  46   bob bit error:  1.2509019  +  0.9448066    & eve bit error: 0.89263\n",
            "  epochs:  47   bob bit error:  1.1918573  +  0.9435943    & eve bit error: 0.9132112\n",
            "  epochs:  48   bob bit error:  1.1372079  +  0.94237137    & eve bit error: 0.9334936\n",
            "  epochs:  49   bob bit error:  1.0865855  +  0.94049317    & eve bit error: 0.964699\n",
            "  epochs:  50   bob bit error:  1.0391567  +  0.93867916    & eve bit error: 0.9945864\n",
            "  epochs:  51   bob bit error:  0.99575484  +  0.9367663    & eve bit error: 1.026447\n",
            "  epochs:  52   bob bit error:  0.9545126  +  0.93399996    & eve bit error: 1.072439\n",
            "  epochs:  53   bob bit error:  0.91636217  +  0.9306666    & eve bit error: 1.1287174\n",
            "  epochs:  54   bob bit error:  0.88074785  +  0.92693084    & eve bit error: 1.1909614\n",
            "  epochs:  55   bob bit error:  0.84810525  +  0.9215903    & eve bit error: 1.2848167\n",
            "  epochs:  56   bob bit error:  0.81711864  +  0.9166932    & eve bit error: 1.3699887\n",
            "  epochs:  57   bob bit error:  0.78709716  +  0.91103727    & eve bit error: 1.4695258\n",
            "  epochs:  58   bob bit error:  0.7604351  +  0.9069052    & eve bit error: 1.533773\n",
            "  epochs:  59   bob bit error:  0.73894763  +  0.90016246    & eve bit error: 1.6327391\n",
            "  epochs:  60   bob bit error:  0.71060455  +  0.8932113    & eve bit error: 1.7720476\n",
            "  epochs:  61   bob bit error:  0.6849047  +  0.8869154    & eve bit error: 1.8790992\n",
            "  epochs:  62   bob bit error:  0.6635345  +  0.8819702    & eve bit error: 1.9542058\n",
            "  epochs:  63   bob bit error:  0.6442504  +  0.8716321    & eve bit error: 2.1325645\n",
            "  epochs:  64   bob bit error:  0.6250329  +  0.86165285    & eve bit error: 2.3047042\n",
            "  epochs:  65   bob bit error:  0.60606277  +  0.8540197    & eve bit error: 2.437614\n",
            "  epochs:  66   bob bit error:  0.58950925  +  0.84528446    & eve bit error: 2.597765\n",
            "  epochs:  67   bob bit error:  0.57193404  +  0.8364018    & eve bit error: 2.7469988\n",
            "  epochs:  68   bob bit error:  0.55732536  +  0.8242298    & eve bit error: 2.9684522\n",
            "  epochs:  69   bob bit error:  0.54172933  +  0.8127207    & eve bit error: 3.1675444\n",
            "  epochs:  70   bob bit error:  0.5283094  +  0.7962761    & eve bit error: 3.4619966\n",
            "  epochs:  71   bob bit error:  0.5046317  +  0.7823926    & eve bit error: 3.7221456\n",
            "  epochs:  72   bob bit error:  0.48489118  +  0.7678403    & eve bit error: 3.9790297\n",
            "  epochs:  73   bob bit error:  0.47790563  +  0.7486105    & eve bit error: 4.324644\n",
            "  epochs:  74   bob bit error:  0.4590114  +  0.7394154    & eve bit error: 4.51693\n",
            "  epochs:  75   bob bit error:  0.46050268  +  0.71024877    & eve bit error: 5.042069\n",
            "  epochs:  76   bob bit error:  0.43495783  +  0.70607275    & eve bit error: 5.1774616\n",
            "  epochs:  77   bob bit error:  0.45936552  +  0.6796011    & eve bit error: 5.624453\n",
            "  epochs:  78   bob bit error:  0.4234522  +  0.66759783    & eve bit error: 5.8633127\n",
            "  epochs:  79   bob bit error:  0.40827936  +  0.64334846    & eve bit error: 6.3856564\n",
            "  epochs:  80   bob bit error:  0.39783084  +  0.62461865    & eve bit error: 6.7475305\n",
            "  epochs:  81   bob bit error:  0.39648703  +  0.5978781    & eve bit error: 7.280328\n",
            "  epochs:  82   bob bit error:  0.38287282  +  0.572934    & eve bit error: 7.81683\n",
            "  epochs:  83   bob bit error:  0.37964392  +  0.546223    & eve bit error: 8.393145\n",
            "  epochs:  84   bob bit error:  0.37475756  +  0.5202352    & eve bit error: 8.950045\n",
            "  epochs:  85   bob bit error:  0.36480966  +  0.4965554    & eve bit error: 9.490179\n",
            "  epochs:  86   bob bit error:  0.3597822  +  0.46943235    & eve bit error: 10.136122\n",
            "  epochs:  87   bob bit error:  0.3634128  +  0.4454597    & eve bit error: 10.660057\n",
            "  epochs:  88   bob bit error:  0.36638665  +  0.421592    & eve bit error: 11.247372\n",
            "  epochs:  89   bob bit error:  0.34436822  +  0.4067588    & eve bit error: 11.655713\n",
            "  epochs:  90   bob bit error:  0.35361695  +  0.3967651    & eve bit error: 11.89372\n",
            "  epochs:  91   bob bit error:  0.44234535  +  0.37984508    & eve bit error: 12.275246\n",
            "  epochs:  92   bob bit error:  0.3708192  +  0.3863699    & eve bit error: 12.125908\n",
            "  epochs:  93   bob bit error:  0.3143261  +  0.37929454    & eve bit error: 12.321459\n",
            "  epochs:  94   bob bit error:  0.29507667  +  0.35890552    & eve bit error: 12.865601\n",
            "  epochs:  95   bob bit error:  0.2877719  +  0.33250546    & eve bit error: 13.586747\n",
            "  epochs:  96   bob bit error:  0.28578314  +  0.30909947    & eve bit error: 14.244235\n",
            "  epochs:  97   bob bit error:  0.28337103  +  0.28695995    & eve bit error: 14.893761\n",
            "  epochs:  98   bob bit error:  0.28023112  +  0.2667336    & eve bit error: 15.506166\n",
            "  epochs:  99   bob bit error:  0.27720332  +  0.25069386    & eve bit error: 16.007044\n",
            "  epochs:  100   bob bit error:  0.27312547  +  0.23661233    & eve bit error: 16.463812\n",
            "  epochs:  101   bob bit error:  0.26957202  +  0.22223562    & eve bit error: 16.940262\n",
            "  epochs:  102   bob bit error:  0.26475987  +  0.2116319    & eve bit error: 17.301765\n",
            "  epochs:  103   bob bit error:  0.25994664  +  0.20149653    & eve bit error: 17.656715\n",
            "  epochs:  104   bob bit error:  0.25534832  +  0.1912161    & eve bit error: 18.029629\n",
            "  epochs:  105   bob bit error:  0.24991447  +  0.18194503    & eve bit error: 18.378813\n",
            "  epochs:  106   bob bit error:  0.2459985  +  0.1715459    & eve bit error: 18.772455\n",
            "  epochs:  107   bob bit error:  0.24057005  +  0.16228162    & eve bit error: 19.135983\n",
            "  epochs:  108   bob bit error:  0.23419309  +  0.15571521    & eve bit error: 19.396603\n",
            "  epochs:  109   bob bit error:  0.22994268  +  0.14825262    & eve bit error: 19.701595\n",
            "  epochs:  110   bob bit error:  0.22499889  +  0.1399862    & eve bit error: 20.049229\n",
            "  epochs:  111   bob bit error:  0.21971312  +  0.13277705    & eve bit error: 20.353561\n",
            "  epochs:  112   bob bit error:  0.21566838  +  0.12551947    & eve bit error: 20.689281\n",
            "  epochs:  113   bob bit error:  0.21102849  +  0.119812176    & eve bit error: 20.945982\n",
            "  epochs:  114   bob bit error:  0.20444731  +  0.11515947    & eve bit error: 21.156715\n",
            "  epochs:  115   bob bit error:  0.20018008  +  0.109865375    & eve bit error: 21.415028\n",
            "  epochs:  116   bob bit error:  0.2020831  +  0.100062266    & eve bit error: 21.87157\n",
            "  epochs:  117   bob bit error:  0.18989025  +  0.09644233    & eve bit error: 22.121365\n",
            "  epochs:  118   bob bit error:  0.18986598  +  0.09409801    & eve bit error: 22.204077\n",
            "  epochs:  119   bob bit error:  0.18374416  +  0.09080259    & eve bit error: 22.332966\n",
            "  epochs:  120   bob bit error:  0.19655071  +  0.082855165    & eve bit error: 22.714027\n",
            "  epochs:  121   bob bit error:  0.17443264  +  0.080452    & eve bit error: 23.011002\n",
            "  epochs:  122   bob bit error:  0.1731767  +  0.08367233    & eve bit error: 22.78397\n",
            "  epochs:  123   bob bit error:  0.17259352  +  0.08023575    & eve bit error: 22.951172\n",
            "  epochs:  124   bob bit error:  0.17354812  +  0.08027769    & eve bit error: 22.922905\n",
            "  epochs:  125   bob bit error:  0.17146458  +  0.07703968    & eve bit error: 23.14243\n",
            "  epochs:  126   bob bit error:  0.15912268  +  0.07625914    & eve bit error: 23.177414\n",
            "  epochs:  127   bob bit error:  0.14841829  +  0.071262754    & eve bit error: 23.484367\n",
            "  epochs:  128   bob bit error:  0.140831  +  0.06512033    & eve bit error: 23.858822\n",
            "  epochs:  129   bob bit error:  0.13797769  +  0.058983278    & eve bit error: 24.248154\n",
            "  epochs:  130   bob bit error:  0.13619417  +  0.053408295    & eve bit error: 24.624199\n",
            "  epochs:  131   bob bit error:  0.134354  +  0.049465846    & eve bit error: 24.898474\n",
            "  epochs:  132   bob bit error:  0.13223045  +  0.045534577    & eve bit error: 25.188622\n",
            "  epochs:  133   bob bit error:  0.13012972  +  0.042375892    & eve bit error: 25.423178\n",
            "  epochs:  134   bob bit error:  0.12781304  +  0.03851573    & eve bit error: 25.730232\n",
            "  epochs:  135   bob bit error:  0.12555884  +  0.03553694    & eve bit error: 25.978374\n",
            "  epochs:  136   bob bit error:  0.12308891  +  0.033187766    & eve bit error: 26.179195\n",
            "  epochs:  137   bob bit error:  0.120441616  +  0.031011887    & eve bit error: 26.373955\n",
            "  epochs:  138   bob bit error:  0.11764875  +  0.028538028    & eve bit error: 26.599882\n",
            "  epochs:  139   bob bit error:  0.115024395  +  0.026755003    & eve bit error: 26.772015\n",
            "  epochs:  140   bob bit error:  0.11265631  +  0.025092995    & eve bit error: 26.935963\n",
            "  epochs:  141   bob bit error:  0.11012481  +  0.023046654    & eve bit error: 27.15123\n",
            "  epochs:  142   bob bit error:  0.10771315  +  0.021634964    & eve bit error: 27.308216\n",
            "  epochs:  143   bob bit error:  0.10555671  +  0.020380292    & eve bit error: 27.444294\n",
            "  epochs:  144   bob bit error:  0.103072196  +  0.01887975    & eve bit error: 27.611807\n",
            "  epochs:  145   bob bit error:  0.10121757  +  0.01771278    & eve bit error: 27.75631\n",
            "  epochs:  146   bob bit error:  0.09878697  +  0.016324276    & eve bit error: 27.91324\n",
            "  epochs:  147   bob bit error:  0.09660222  +  0.015386012    & eve bit error: 28.029406\n",
            "  epochs:  148   bob bit error:  0.0959929  +  0.013770402    & eve bit error: 28.23784\n",
            "  epochs:  149   bob bit error:  0.09245826  +  0.0129921865    & eve bit error: 28.354279\n",
            "  epochs:  150   bob bit error:  0.090313055  +  0.012210074    & eve bit error: 28.474104\n",
            "  epochs:  151   bob bit error:  0.08831145  +  0.011476312    & eve bit error: 28.56703\n",
            "  epochs:  152   bob bit error:  0.08641595  +  0.010495798    & eve bit error: 28.694927\n",
            "  epochs:  153   bob bit error:  0.08481569  +  0.008619025    & eve bit error: 28.97314\n",
            "  epochs:  154   bob bit error:  0.082682855  +  0.007644693    & eve bit error: 29.16327\n",
            "  epochs:  155   bob bit error:  0.08073008  +  0.007581764    & eve bit error: 29.201998\n",
            "  epochs:  156   bob bit error:  0.0788278  +  0.0075787646    & eve bit error: 29.216743\n",
            "  epochs:  157   bob bit error:  0.07726917  +  0.007351874    & eve bit error: 29.25111\n",
            "  epochs:  158   bob bit error:  0.07593886  +  0.006781967    & eve bit error: 29.342638\n",
            "  epochs:  159   bob bit error:  0.074261665  +  0.0057707066    & eve bit error: 29.545174\n",
            "  epochs:  160   bob bit error:  0.07253568  +  0.005173169    & eve bit error: 29.69117\n",
            "  epochs:  161   bob bit error:  0.07096577  +  0.00491947    & eve bit error: 29.753492\n",
            "  epochs:  162   bob bit error:  0.06955718  +  0.004394209    & eve bit error: 29.8663\n",
            "  epochs:  163   bob bit error:  0.06824695  +  0.0042273477    & eve bit error: 29.904148\n",
            "  epochs:  164   bob bit error:  0.06681689  +  0.0037716066    & eve bit error: 30.017504\n",
            "  epochs:  165   bob bit error:  0.065464824  +  0.0033336843    & eve bit error: 30.134834\n",
            "  epochs:  166   bob bit error:  0.0640575  +  0.0032236956    & eve bit error: 30.17915\n",
            "  epochs:  167   bob bit error:  0.062906176  +  0.0026889995    & eve bit error: 30.32288\n",
            "  epochs:  168   bob bit error:  0.061683983  +  0.00241857    & eve bit error: 30.3872\n",
            "  epochs:  169   bob bit error:  0.060364265  +  0.0018394355    & eve bit error: 30.587498\n",
            "  epochs:  170   bob bit error:  0.058819488  +  0.0015550369    & eve bit error: 30.719738\n",
            "  epochs:  171   bob bit error:  0.05749309  +  0.0019401065    & eve bit error: 30.58938\n",
            "  epochs:  172   bob bit error:  0.0565134  +  0.00202929    & eve bit error: 30.537224\n",
            "  epochs:  173   bob bit error:  0.055462558  +  0.0018969931    & eve bit error: 30.565945\n",
            "  epochs:  174   bob bit error:  0.05416738  +  0.0015033548    & eve bit error: 30.72562\n",
            "  epochs:  175   bob bit error:  0.05289225  +  0.0013560588    & eve bit error: 30.807076\n",
            "  epochs:  176   bob bit error:  0.05209598  +  0.0014344295    & eve bit error: 30.768566\n",
            "  epochs:  177   bob bit error:  0.05126883  +  0.0012595342    & eve bit error: 30.828075\n",
            "  epochs:  178   bob bit error:  0.05001101  +  0.0010631282    & eve bit error: 30.92353\n",
            "  epochs:  179   bob bit error:  0.048821248  +  0.0010221777    & eve bit error: 30.964947\n",
            "  epochs:  180   bob bit error:  0.04805977  +  0.0010131004    & eve bit error: 30.965721\n",
            "  epochs:  181   bob bit error:  0.04722327  +  0.0010161989    & eve bit error: 30.951202\n",
            "  epochs:  182   bob bit error:  0.04611651  +  0.0010167918    & eve bit error: 30.9538\n",
            "  epochs:  183   bob bit error:  0.045164816  +  0.0008332696    & eve bit error: 31.061348\n",
            "  epochs:  184   bob bit error:  0.044569556  +  0.000844387    & eve bit error: 31.045454\n",
            "  epochs:  185   bob bit error:  0.04381253  +  0.0005590007    & eve bit error: 31.208668\n",
            "  epochs:  186   bob bit error:  0.042703327  +  0.0004981625    & eve bit error: 31.254816\n",
            "  epochs:  187   bob bit error:  0.041826505  +  0.00048291287    & eve bit error: 31.27803\n",
            "  epochs:  188   bob bit error:  0.041135438  +  0.0004963098    & eve bit error: 31.264359\n",
            "  epochs:  189   bob bit error:  0.040320992  +  0.00041612788    & eve bit error: 31.318054\n",
            "  epochs:  190   bob bit error:  0.039431185  +  0.00037490908    & eve bit error: 31.349712\n",
            "  epochs:  191   bob bit error:  0.038791373  +  0.00044533765    & eve bit error: 31.296247\n",
            "  epochs:  192   bob bit error:  0.038290396  +  0.00037722083    & eve bit error: 31.354553\n",
            "  epochs:  193   bob bit error:  0.03749091  +  0.00035323462    & eve bit error: 31.366032\n",
            "  epochs:  194   bob bit error:  0.036624216  +  0.00030238353    & eve bit error: 31.408665\n",
            "  epochs:  195   bob bit error:  0.03600622  +  0.00027701087    & eve bit error: 31.442806\n",
            "  epochs:  196   bob bit error:  0.03540545  +  0.0002878831    & eve bit error: 31.434937\n",
            "  epochs:  197   bob bit error:  0.034650907  +  0.000256734    & eve bit error: 31.46537\n",
            "  epochs:  198   bob bit error:  0.034021232  +  0.00022634985    & eve bit error: 31.484825\n",
            "  epochs:  199   bob bit error:  0.033489786  +  0.0001930869    & eve bit error: 31.520298\n",
            "  epochs:  200   bob bit error:  0.032852933  +  0.00020554796    & eve bit error: 31.517572\n",
            "  epochs:  201   bob bit error:  0.032230288  +  0.00013366032    & eve bit error: 31.598694\n",
            "  epochs:  202   bob bit error:  0.031667672  +  0.00012247261    & eve bit error: 31.613556\n",
            "  epochs:  203   bob bit error:  0.031124959  +  0.00016134353    & eve bit error: 31.569935\n",
            "  epochs:  204   bob bit error:  0.030589163  +  0.00014578708    & eve bit error: 31.588749\n",
            "  epochs:  205   bob bit error:  0.030052343  +  0.00017923636    & eve bit error: 31.550474\n",
            "  epochs:  206   bob bit error:  0.029532805  +  0.00012060774    & eve bit error: 31.625147\n",
            "  epochs:  207   bob bit error:  0.02902028  +  8.948093e-05    & eve bit error: 31.669926\n",
            "  epochs:  208   bob bit error:  0.02849859  +  0.00012920379    & eve bit error: 31.611473\n",
            "  epochs:  209   bob bit error:  0.027997216  +  0.00012170865    & eve bit error: 31.625\n",
            "  epochs:  210   bob bit error:  0.027510483  +  8.125776e-05    & eve bit error: 31.680725\n",
            "  epochs:  211   bob bit error:  0.027028535  +  0.00011519491    & eve bit error: 31.626846\n",
            "  epochs:  212   bob bit error:  0.026557893  +  0.000129707    & eve bit error: 31.604065\n",
            "  epochs:  213   bob bit error:  0.026090844  +  7.8191355e-05    & eve bit error: 31.683205\n",
            "  epochs:  214   bob bit error:  0.025642257  +  6.742275e-05    & eve bit error: 31.709167\n",
            "  epochs:  215   bob bit error:  0.025201917  +  7.34564e-05    & eve bit error: 31.696953\n",
            "  epochs:  216   bob bit error:  0.02476175  +  7.94646e-05    & eve bit error: 31.685768\n",
            "  epochs:  217   bob bit error:  0.024343468  +  5.6567736e-05    & eve bit error: 31.727219\n",
            "  epochs:  218   bob bit error:  0.023933657  +  5.225112e-05    & eve bit error: 31.740112\n",
            "  epochs:  219   bob bit error:  0.023521112  +  5.9564256e-05    & eve bit error: 31.72744\n",
            "  epochs:  220   bob bit error:  0.023126267  +  4.897037e-05    & eve bit error: 31.750944\n",
            "  epochs:  221   bob bit error:  0.022737345  +  4.0096238e-05    & eve bit error: 31.76909\n",
            "  epochs:  222   bob bit error:  0.022347283  +  2.6296651e-05    & eve bit error: 31.80361\n",
            "  epochs:  223   bob bit error:  0.021982737  +  2.9940875e-05    & eve bit error: 31.786509\n",
            "  epochs:  224   bob bit error:  0.021602213  +  1.5352998e-05    & eve bit error: 31.837837\n",
            "  epochs:  225   bob bit error:  0.021241691  +  4.00902e-05    & eve bit error: 31.764158\n",
            "  epochs:  226   bob bit error:  0.02089739  +  1.392935e-05    & eve bit error: 31.8391\n",
            "  epochs:  227   bob bit error:  0.020536538  +  3.1445234e-05    & eve bit error: 31.790379\n",
            "  epochs:  228   bob bit error:  0.020206083  +  3.590401e-05    & eve bit error: 31.766695\n",
            "  epochs:  229   bob bit error:  0.019864086  +  2.3616547e-05    & eve bit error: 31.809387\n",
            "  epochs:  230   bob bit error:  0.019538313  +  3.789007e-05    & eve bit error: 31.771229\n",
            "  epochs:  231   bob bit error:  0.01921538  +  2.7432861e-05    & eve bit error: 31.796139\n",
            "  epochs:  232   bob bit error:  0.018894434  +  7.0473296e-05    & eve bit error: 31.70414\n",
            "  epochs:  233   bob bit error:  0.018590873  +  3.6413672e-05    & eve bit error: 31.77499\n",
            "  epochs:  234   bob bit error:  0.018272787  +  4.881533e-05    & eve bit error: 31.75029\n",
            "  epochs:  235   bob bit error:  0.017982963  +  1.9189514e-05    & eve bit error: 31.821178\n",
            "  epochs:  236   bob bit error:  0.017687157  +  2.8521117e-05    & eve bit error: 31.794561\n",
            "  epochs:  237   bob bit error:  0.017397735  +  3.2188917e-05    & eve bit error: 31.78877\n",
            "  epochs:  238   bob bit error:  0.017110648  +  2.0771804e-05    & eve bit error: 31.825003\n",
            "  epochs:  239   bob bit error:  0.016828788  +  3.4822962e-05    & eve bit error: 31.786095\n",
            "  epochs:  240   bob bit error:  0.016564237  +  1.9060226e-05    & eve bit error: 31.818989\n",
            "  epochs:  241   bob bit error:  0.016291223  +  1.94226e-05    & eve bit error: 31.808338\n",
            "  epochs:  242   bob bit error:  0.016029797  +  1.3113099e-06    & eve bit error: 31.908932\n",
            "  epochs:  243   bob bit error:  0.015766658  +  2.2773762e-05    & eve bit error: 31.81343\n",
            "  epochs:  244   bob bit error:  0.015517546  +  2.046543e-05    & eve bit error: 31.816343\n",
            "  epochs:  245   bob bit error:  0.015260345  +  1.9207795e-05    & eve bit error: 31.821379\n",
            "  epochs:  246   bob bit error:  0.01502135  +  7.125983e-06    & eve bit error: 31.87005\n",
            "  epochs:  247   bob bit error:  0.014779126  +  2.8996815e-06    & eve bit error: 31.885872\n",
            "  epochs:  248   bob bit error:  0.014538964  +  2.123234e-05    & eve bit error: 31.797573\n",
            "  epochs:  249   bob bit error:  0.014311543  +  3.0084734e-06    & eve bit error: 31.890793\n",
            "  epochs:  250   bob bit error:  0.01407708  +  2.8713068e-05    & eve bit error: 31.794971\n",
            "  epochs:  251   bob bit error:  0.013856396  +  7.1228005e-06    & eve bit error: 31.863707\n",
            "  epochs:  252   bob bit error:  0.013634682  +  1.873066e-05    & eve bit error: 31.826239\n",
            "  epochs:  253   bob bit error:  0.013422977  +  5.073364e-07    & eve bit error: 31.923988\n",
            "  epochs:  254   bob bit error:  0.013204675  +  8.569803e-06    & eve bit error: 31.863262\n",
            "  epochs:  255   bob bit error:  0.012997398  +  3.27691e-07    & eve bit error: 31.919199\n",
            "  epochs:  256   bob bit error:  0.01278828  +  1.3570227e-06    & eve bit error: 31.921167\n",
            "  epochs:  257   bob bit error:  0.012587582  +  1.6006265e-05    & eve bit error: 31.843292\n",
            "  epochs:  258   bob bit error:  0.012387076  +  7.6152587e-06    & eve bit error: 31.874973\n",
            "  epochs:  259   bob bit error:  0.012192698  +  2.0528485e-06    & eve bit error: 31.908808\n",
            "  epochs:  260   bob bit error:  0.011998074  +  5.16826e-06    & eve bit error: 31.884937\n",
            "  epochs:  261   bob bit error:  0.011808159  +  6.0980374e-06    & eve bit error: 31.873604\n",
            "  epochs:  262   bob bit error:  0.011620628  +  2.8535762e-05    & eve bit error: 31.793991\n",
            "  epochs:  263   bob bit error:  0.011440271  +  9.2903906e-07    & eve bit error: 31.910225\n",
            "  epochs:  264   bob bit error:  0.011258388  +  1.0009281e-06    & eve bit error: 31.914854\n",
            "  epochs:  265   bob bit error:  0.011083251  +  4.6891164e-06    & eve bit error: 31.884186\n",
            "  epochs:  266   bob bit error:  0.010908693  +  8.21071e-06    & eve bit error: 31.864824\n",
            "  epochs:  267   bob bit error:  0.010741085  +  2.5656277e-07    & eve bit error: 31.940395\n",
            "  epochs:  268   bob bit error:  0.010570276  +  3.5370988e-07    & eve bit error: 31.924458\n",
            "  epochs:  269   bob bit error:  0.0104071405  +  2.1928213e-06    & eve bit error: 31.911425\n",
            "  epochs:  270   bob bit error:  0.010242505  +  3.7267346e-06    & eve bit error: 31.9029\n",
            "  epochs:  271   bob bit error:  0.010083081  +  9.995396e-06    & eve bit error: 31.868221\n",
            "  epochs:  272   bob bit error:  0.009927974  +  5.4274665e-09    & eve bit error: 31.961433\n",
            "  epochs:  273   bob bit error:  0.009771742  +  3.9102833e-06    & eve bit error: 31.904715\n",
            "  epochs:  274   bob bit error:  0.009617026  +  5.027495e-06    & eve bit error: 31.897205\n",
            "  epochs:  275   bob bit error:  0.009471038  +  4.0008723e-07    & eve bit error: 31.970295\n",
            "  epochs:  276   bob bit error:  0.00931754  +  5.2117125e-06    & eve bit error: 31.897167\n",
            "  epochs:  277   bob bit error:  0.009173962  +  5.672979e-08    & eve bit error: 31.958977\n",
            "  epochs:  278   bob bit error:  0.009031574  +  2.4682272e-06    & eve bit error: 31.9014\n",
            "  epochs:  279   bob bit error:  0.008890119  +  1.940173e-06    & eve bit error: 31.903929\n",
            "  epochs:  280   bob bit error:  0.008752827  +  9.670564e-06    & eve bit error: 31.865622\n",
            "  epochs:  281   bob bit error:  0.008618485  +  6.191186e-07    & eve bit error: 31.930325\n",
            "  epochs:  282   bob bit error:  0.008481601  +  6.697918e-08    & eve bit error: 31.932049\n",
            "  epochs:  283   bob bit error:  0.008354941  +  6.864198e-09    & eve bit error: 31.946285\n",
            "  epochs:  284   bob bit error:  0.008222586  +  6.9484054e-07    & eve bit error: 31.922562\n",
            "  epochs:  285   bob bit error:  0.0080943  +  4.3847135e-06    & eve bit error: 31.893177\n",
            "  epochs:  286   bob bit error:  0.007966207  +  1.8131391e-06    & eve bit error: 31.893644\n",
            "  epochs:  287   bob bit error:  0.00784878  +  4.836886e-06    & eve bit error: 31.888275\n",
            "  epochs:  288   bob bit error:  0.007723368  +  7.398067e-06    & eve bit error: 31.879213\n",
            "  epochs:  289   bob bit error:  0.0076040826  +  2.0540442e-06    & eve bit error: 31.912014\n",
            "  epochs:  290   bob bit error:  0.0074870647  +  2.526248e-06    & eve bit error: 31.908909\n",
            "  epochs:  291   bob bit error:  0.0073711746  +  5.736187e-06    & eve bit error: 31.88999\n",
            "  epochs:  292   bob bit error:  0.0072593316  +  1.0591208e-07    & eve bit error: 31.93454\n",
            "  epochs:  293   bob bit error:  0.007144378  +  6.1359685e-07    & eve bit error: 31.92849\n",
            "  epochs:  294   bob bit error:  0.0070356205  +  2.6052987e-06    & eve bit error: 31.9164\n",
            "  epochs:  295   bob bit error:  0.0069251866  +  2.121737e-06    & eve bit error: 31.921774\n",
            "  epochs:  296   bob bit error:  0.0068197707  +  1.16955525e-05    & eve bit error: 32.0336\n",
            "  epochs:  297   bob bit error:  0.0067119626  +  1.1860015e-05    & eve bit error: 31.872112\n",
            "  epochs:  298   bob bit error:  0.006608785  +  2.3210362e-06    & eve bit error: 31.975107\n",
            "  epochs:  299   bob bit error:  0.006505895  +  5.4147677e-08    & eve bit error: 31.943035\n",
            "  epochs:  300   bob bit error:  0.006406101  +  7.327551e-06    & eve bit error: 31.891668\n",
            "  epochs:  301   bob bit error:  0.006306612  +  6.365855e-06    & eve bit error: 31.995165\n",
            "  epochs:  302   bob bit error:  0.0062087723  +  6.9672984e-07    & eve bit error: 31.963741\n",
            "  epochs:  303   bob bit error:  0.0061150067  +  1.5557243e-06    & eve bit error: 31.909477\n",
            "  epochs:  304   bob bit error:  0.0060167965  +  7.976562e-07    & eve bit error: 31.959988\n",
            "  epochs:  305   bob bit error:  0.0059279213  +  7.1304385e-10    & eve bit error: 31.958363\n",
            "  epochs:  306   bob bit error:  0.0058317967  +  2.9754815e-06    & eve bit error: 31.987726\n",
            "  epochs:  307   bob bit error:  0.0057436777  +  1.2892887e-06    & eve bit error: 31.925894\n",
            "  epochs:  308   bob bit error:  0.0056594303  +  3.574142e-06    & eve bit error: 31.997723\n",
            "  epochs:  309   bob bit error:  0.0055652955  +  4.724548e-06    & eve bit error: 31.905931\n",
            "  epochs:  310   bob bit error:  0.0054864213  +  1.4316407e-05    & eve bit error: 32.025757\n",
            "  epochs:  311   bob bit error:  0.0053988704  +  1.4319114e-05    & eve bit error: 31.872992\n",
            "  epochs:  312   bob bit error:  0.00531717  +  1.4110137e-06    & eve bit error: 31.92105\n",
            "  epochs:  313   bob bit error:  0.005235797  +  1.1567136e-06    & eve bit error: 31.981426\n",
            "  epochs:  314   bob bit error:  0.0051512914  +  1.8451048e-05    & eve bit error: 31.856976\n",
            "  epochs:  315   bob bit error:  0.0050806003  +  1.0864518e-05    & eve bit error: 32.001465\n",
            "  epochs:  316   bob bit error:  0.0049918494  +  3.4903505e-06    & eve bit error: 31.923666\n",
            "  epochs:  317   bob bit error:  0.004918286  +  2.0974954e-05    & eve bit error: 31.849174\n",
            "  epochs:  318   bob bit error:  0.00484531  +  1.18518055e-05    & eve bit error: 32.0319\n",
            "  epochs:  319   bob bit error:  0.0047666607  +  5.3183894e-06    & eve bit error: 31.907171\n",
            "  epochs:  320   bob bit error:  0.004696307  +  5.781724e-07    & eve bit error: 31.934933\n",
            "  epochs:  321   bob bit error:  0.0046228673  +  1.9573135e-06    & eve bit error: 31.977228\n",
            "  epochs:  322   bob bit error:  0.0045466293  +  1.4140141e-05    & eve bit error: 31.86998\n",
            "  epochs:  323   bob bit error:  0.0044827433  +  8.143896e-06    & eve bit error: 32.002457\n",
            "  epochs:  324   bob bit error:  0.0044098967  +  5.1894203e-06    & eve bit error: 31.908398\n",
            "  epochs:  325   bob bit error:  0.004339385  +  2.2894526e-05    & eve bit error: 31.848854\n",
            "  epochs:  326   bob bit error:  0.0042825914  +  2.5925074e-05    & eve bit error: 32.035133\n",
            "  epochs:  327   bob bit error:  0.0042084455  +  3.5360354e-05    & eve bit error: 31.827766\n",
            "  epochs:  328   bob bit error:  0.0041450225  +  1.0422539e-06    & eve bit error: 31.979282\n",
            "  epochs:  329   bob bit error:  0.004084453  +  5.976191e-06    & eve bit error: 31.91513\n",
            "  epochs:  330   bob bit error:  0.004014739  +  1.1271804e-05    & eve bit error: 31.886501\n",
            "  epochs:  331   bob bit error:  0.0039614057  +  2.3334685e-05    & eve bit error: 32.03779\n",
            "  epochs:  332   bob bit error:  0.0039033196  +  1.1233664e-06    & eve bit error: 31.925577\n",
            "  epochs:  333   bob bit error:  0.0038342846  +  1.3659274e-05    & eve bit error: 31.88671\n",
            "  epochs:  334   bob bit error:  0.0037807585  +  1.0941669e-05    & eve bit error: 31.99516\n",
            "  epochs:  335   bob bit error:  0.003717197  +  4.0247305e-06    & eve bit error: 31.920984\n",
            "  epochs:  336   bob bit error:  0.003662772  +  3.5381738e-06    & eve bit error: 31.904295\n",
            "  epochs:  337   bob bit error:  0.0036066961  +  1.8091283e-06    & eve bit error: 31.913597\n",
            "  epochs:  338   bob bit error:  0.0035565137  +  4.545926e-06    & eve bit error: 31.914982\n",
            "  epochs:  339   bob bit error:  0.003497687  +  2.7367976e-06    & eve bit error: 31.924305\n",
            "  epochs:  340   bob bit error:  0.0034480551  +  8.082527e-05    & eve bit error: 32.06944\n",
            "  epochs:  341   bob bit error:  0.003391129  +  9.551195e-06    & eve bit error: 31.903402\n",
            "  epochs:  342   bob bit error:  0.0033354638  +  1.3302997e-05    & eve bit error: 31.887766\n",
            "  epochs:  343   bob bit error:  0.0032930109  +  3.1940326e-06    & eve bit error: 31.973095\n",
            "  epochs:  344   bob bit error:  0.0032374603  +  9.958063e-07    & eve bit error: 31.934017\n",
            "  epochs:  345   bob bit error:  0.0031848524  +  4.303396e-05    & eve bit error: 31.855244\n",
            "  epochs:  346   bob bit error:  0.0031431227  +  3.730094e-05    & eve bit error: 32.035416\n",
            "  epochs:  347   bob bit error:  0.0030934243  +  9.676868e-06    & eve bit error: 31.924948\n",
            "  epochs:  348   bob bit error:  0.003041272  +  5.4081625e-07    & eve bit error: 31.940273\n",
            "  epochs:  349   bob bit error:  0.0030018059  +  6.033681e-07    & eve bit error: 31.947582\n",
            "  epochs:  350   bob bit error:  0.0029689337  +  2.046363e-06    & eve bit error: 31.962389\n",
            "  epochs:  351   bob bit error:  0.0029047544  +  2.4010958e-05    & eve bit error: 31.880661\n",
            "  epochs:  352   bob bit error:  0.002865843  +  1.09685e-05    & eve bit error: 31.996376\n",
            "  epochs:  353   bob bit error:  0.0028196282  +  7.327551e-06    & eve bit error: 31.919426\n",
            "  epochs:  354   bob bit error:  0.0027750966  +  1.2919272e-05    & eve bit error: 31.89882\n",
            "  epochs:  355   bob bit error:  0.0027352683  +  5.036411e-05    & eve bit error: 32.04091\n",
            "  epochs:  356   bob bit error:  0.0026911825  +  3.4931378e-05    & eve bit error: 31.856989\n",
            "  epochs:  357   bob bit error:  0.0026494327  +  1.5684538e-05    & eve bit error: 32.001167\n",
            "  epochs:  358   bob bit error:  0.0026141468  +  3.3501424e-06    & eve bit error: 31.93458\n",
            "  epochs:  359   bob bit error:  0.0025675944  +  2.9350877e-05    & eve bit error: 31.893997\n",
            "  epochs:  360   bob bit error:  0.002531922  +  3.457298e-05    & eve bit error: 32.010994\n",
            "  epochs:  361   bob bit error:  0.0024949757  +  3.539368e-05    & eve bit error: 31.878685\n",
            "  epochs:  362   bob bit error:  0.002457456  +  6.46389e-05    & eve bit error: 32.059425\n",
            "  epochs:  363   bob bit error:  0.0024121292  +  5.40939e-05    & eve bit error: 31.848867\n",
            "  epochs:  364   bob bit error:  0.002386261  +  2.3786011e-05    & eve bit error: 32.009697\n",
            "  epochs:  365   bob bit error:  0.0023591889  +  3.36484e-07    & eve bit error: 31.964066\n",
            "  epochs:  366   bob bit error:  0.0023044124  +  2.4822934e-06    & eve bit error: 31.940907\n",
            "  epochs:  367   bob bit error:  0.0022744995  +  8.7437024e-07    & eve bit error: 31.955956\n",
            "  epochs:  368   bob bit error:  0.0022496514  +  5.3078156e-07    & eve bit error: 31.957928\n",
            "  epochs:  369   bob bit error:  0.0022029714  +  5.0494364e-08    & eve bit error: 31.93612\n",
            "  epochs:  370   bob bit error:  0.0021724573  +  1.8525171e-06    & eve bit error: 31.932972\n",
            "  epochs:  371   bob bit error:  0.0021424762  +  6.776511e-06    & eve bit error: 31.95242\n",
            "  epochs:  372   bob bit error:  0.0021106955  +  1.2575803e-05    & eve bit error: 31.927029\n",
            "  epochs:  373   bob bit error:  0.0020688998  +  1.614859e-08    & eve bit error: 31.943378\n",
            "  epochs:  374   bob bit error:  0.002046148  +  7.4695805e-09    & eve bit error: 31.95364\n",
            "  epochs:  375   bob bit error:  0.0020122733  +  4.7994677e-06    & eve bit error: 31.931183\n",
            "  epochs:  376   bob bit error:  0.0019783562  +  3.3083802e-06    & eve bit error: 31.962442\n",
            "  epochs:  377   bob bit error:  0.0019527385  +  8.771285e-06    & eve bit error: 31.93187\n",
            "  epochs:  378   bob bit error:  0.0019205429  +  1.6803465e-06    & eve bit error: 31.934685\n",
            "  epochs:  379   bob bit error:  0.0018898682  +  2.760712e-06    & eve bit error: 31.939644\n",
            "  epochs:  380   bob bit error:  0.0018661369  +  1.9251183e-05    & eve bit error: 31.970499\n",
            "  epochs:  381   bob bit error:  0.0018335755  +  2.9957186e-05    & eve bit error: 31.921143\n",
            "  epochs:  382   bob bit error:  0.0018097218  +  5.1774827e-05    & eve bit error: 32.027958\n",
            "  epochs:  383   bob bit error:  0.001779546  +  1.4933185e-05    & eve bit error: 31.917583\n",
            "  epochs:  384   bob bit error:  0.0017519884  +  2.3734876e-05    & eve bit error: 32.02266\n",
            "  epochs:  385   bob bit error:  0.0017245351  +  6.4940195e-09    & eve bit error: 31.957907\n",
            "  epochs:  386   bob bit error:  0.0017003552  +  3.2792304e-05    & eve bit error: 31.896431\n",
            "  epochs:  387   bob bit error:  0.0016743131  +  2.4901106e-05    & eve bit error: 32.009132\n",
            "  epochs:  388   bob bit error:  0.0016520801  +  4.9333185e-06    & eve bit error: 31.93628\n",
            "  epochs:  389   bob bit error:  0.0016222498  +  2.494872e-07    & eve bit error: 31.959484\n",
            "  epochs:  390   bob bit error:  0.0015978005  +  2.13478e-06    & eve bit error: 31.930624\n",
            "  epochs:  391   bob bit error:  0.001573161  +  7.0656483e-06    & eve bit error: 31.927534\n",
            "  epochs:  392   bob bit error:  0.0015558414  +  1.2446356e-05    & eve bit error: 31.937635\n",
            "  epochs:  393   bob bit error:  0.0015277716  +  5.5920464e-07    & eve bit error: 31.945057\n",
            "  epochs:  394   bob bit error:  0.0015023788  +  5.0453826e-07    & eve bit error: 31.943645\n",
            "  epochs:  395   bob bit error:  0.0014887601  +  3.2759358e-06    & eve bit error: 31.914646\n",
            "  epochs:  396   bob bit error:  0.001461305  +  1.3238726e-05    & eve bit error: 31.96824\n",
            "  epochs:  397   bob bit error:  0.032775953  +  7.432125e-05    & eve bit error: 32.025635\n",
            "  epochs:  398   bob bit error:  0.4864586  +  3.8643713e-05    & eve bit error: 31.70543\n",
            "  epochs:  399   bob bit error:  0.28668627  +  0.0048645237    & eve bit error: 29.67533\n",
            "  epochs:  400   bob bit error:  0.13850047  +  0.009833453    & eve bit error: 28.77044\n",
            "  epochs:  401   bob bit error:  0.0844543  +  0.011057522    & eve bit error: 28.58701\n",
            "  epochs:  402   bob bit error:  0.028947152  +  0.013128202    & eve bit error: 28.300203\n",
            "  epochs:  403   bob bit error:  0.038681276  +  0.013598432    & eve bit error: 28.228128\n",
            "  epochs:  404   bob bit error:  0.017203297  +  0.01332502    & eve bit error: 28.291756\n",
            "  epochs:  405   bob bit error:  0.017140279  +  0.014429298    & eve bit error: 28.136738\n",
            "  epochs:  406   bob bit error:  0.017047262  +  0.013894876    & eve bit error: 28.19629\n",
            "  epochs:  407   bob bit error:  0.019003943  +  0.014319119    & eve bit error: 28.149559\n",
            "  epochs:  408   bob bit error:  0.021431424  +  0.013494995    & eve bit error: 28.268055\n",
            "  epochs:  409   bob bit error:  0.01699925  +  0.012060186    & eve bit error: 28.448597\n",
            "  epochs:  410   bob bit error:  0.01715624  +  0.010606517    & eve bit error: 28.67435\n",
            "  epochs:  411   bob bit error:  0.017194826  +  0.010027322    & eve bit error: 28.775612\n",
            "  epochs:  412   bob bit error:  0.017114239  +  0.009634806    & eve bit error: 28.826397\n",
            "  epochs:  413   bob bit error:  0.017052367  +  0.00898348    & eve bit error: 28.936392\n",
            "  epochs:  414   bob bit error:  0.00980572  +  0.008752299    & eve bit error: 28.979527\n",
            "  epochs:  415   bob bit error:  0.009310585  +  0.00797042    & eve bit error: 29.1129\n",
            "  epochs:  416   bob bit error:  0.009339019  +  0.0071564494    & eve bit error: 29.251785\n",
            "  epochs:  417   bob bit error:  0.009239823  +  0.006911836    & eve bit error: 29.308983\n",
            "  epochs:  418   bob bit error:  0.009102151  +  0.0061144917    & eve bit error: 29.466387\n",
            "  epochs:  419   bob bit error:  0.009017584  +  0.005199121    & eve bit error: 29.658264\n",
            "  epochs:  420   bob bit error:  0.009027048  +  0.0047417562    & eve bit error: 29.77349\n",
            "  epochs:  421   bob bit error:  0.00906596  +  0.004349148    & eve bit error: 29.867678\n",
            "  epochs:  422   bob bit error:  0.009064103  +  0.003603327    & eve bit error: 30.04245\n",
            "  epochs:  423   bob bit error:  0.009100154  +  0.0032762345    & eve bit error: 30.128399\n",
            "  epochs:  424   bob bit error:  0.009215488  +  0.0033777142    & eve bit error: 30.097641\n",
            "  epochs:  425   bob bit error:  0.008995475  +  0.0034975992    & eve bit error: 30.066967\n",
            "  epochs:  426   bob bit error:  0.009215452  +  0.0028482804    & eve bit error: 30.26146\n",
            "  epochs:  427   bob bit error:  0.009355058  +  0.002370457    & eve bit error: 30.396593\n",
            "  epochs:  428   bob bit error:  0.008908603  +  0.0021494501    & eve bit error: 30.477848\n",
            "  epochs:  429   bob bit error:  0.00889223  +  0.0021238436    & eve bit error: 30.470543\n",
            "  epochs:  430   bob bit error:  0.008882281  +  0.0019132427    & eve bit error: 30.554983\n",
            "  epochs:  431   bob bit error:  0.008850618  +  0.0015007167    & eve bit error: 30.72487\n",
            "  epochs:  432   bob bit error:  0.008891059  +  0.0012676703    & eve bit error: 30.816444\n",
            "  epochs:  433   bob bit error:  0.008942945  +  0.0011294389    & eve bit error: 30.885456\n",
            "  epochs:  434   bob bit error:  0.008987312  +  0.00088423217    & eve bit error: 31.00403\n",
            "  epochs:  435   bob bit error:  0.008964751  +  0.0008503104    & eve bit error: 31.018856\n",
            "  epochs:  436   bob bit error:  0.008919733  +  0.00083257124    & eve bit error: 31.042187\n",
            "  epochs:  437   bob bit error:  0.008866322  +  0.00075742265    & eve bit error: 31.064014\n",
            "  epochs:  438   bob bit error:  0.0088249035  +  0.0006858309    & eve bit error: 31.11054\n",
            "  epochs:  439   bob bit error:  0.0087895915  +  0.00059755496    & eve bit error: 31.174559\n",
            "  epochs:  440   bob bit error:  0.008758726  +  0.0005081391    & eve bit error: 31.232407\n",
            "  epochs:  441   bob bit error:  0.008738929  +  0.00045161357    & eve bit error: 31.27321\n",
            "  epochs:  442   bob bit error:  0.008728909  +  0.00034667386    & eve bit error: 31.345646\n",
            "  epochs:  443   bob bit error:  0.008732434  +  0.0003240496    & eve bit error: 31.362644\n",
            "  epochs:  444   bob bit error:  0.008751822  +  0.00048600376    & eve bit error: 31.243427\n",
            "  epochs:  445   bob bit error:  0.008768881  +  0.00039042984    & eve bit error: 31.325396\n",
            "  epochs:  446   bob bit error:  0.008760255  +  0.000275889    & eve bit error: 31.413717\n",
            "  epochs:  447   bob bit error:  0.008720474  +  0.00019614352    & eve bit error: 31.488476\n",
            "  epochs:  448   bob bit error:  0.008682604  +  0.0002335078    & eve bit error: 31.458965\n",
            "  epochs:  449   bob bit error:  0.0086581055  +  0.0002201798    & eve bit error: 31.465786\n",
            "  epochs:  450   bob bit error:  0.008637959  +  0.00014681226    & eve bit error: 31.562222\n",
            "  epochs:  451   bob bit error:  0.008616598  +  0.00011518467    & eve bit error: 31.588106\n",
            "  epochs:  452   bob bit error:  0.008606545  +  0.00012739847    & eve bit error: 31.58443\n",
            "  epochs:  453   bob bit error:  0.008602537  +  0.00012659244    & eve bit error: 31.572819\n",
            "  epochs:  454   bob bit error:  0.008603649  +  0.00011018646    & eve bit error: 31.607872\n",
            "  epochs:  455   bob bit error:  0.008603735  +  0.00010138142    & eve bit error: 31.616066\n",
            "  epochs:  456   bob bit error:  0.008592479  +  8.778739e-05    & eve bit error: 31.63565\n",
            "  epochs:  457   bob bit error:  0.008583553  +  0.00017387001    & eve bit error: 31.540758\n",
            "  epochs:  458   bob bit error:  0.0085680755  +  0.00011211311    & eve bit error: 31.592993\n",
            "  epochs:  459   bob bit error:  0.008550268  +  6.363932e-05    & eve bit error: 31.679691\n",
            "  epochs:  460   bob bit error:  0.008532942  +  3.140514e-05    & eve bit error: 31.757242\n",
            "  epochs:  461   bob bit error:  0.008514723  +  4.723501e-05    & eve bit error: 31.720518\n",
            "  epochs:  462   bob bit error:  0.008488187  +  3.5471738e-05    & eve bit error: 31.747818\n",
            "  epochs:  463   bob bit error:  0.0083276555  +  3.756935e-05    & eve bit error: 31.747227\n",
            "  epochs:  464   bob bit error:  0.0006755111  +  3.2076743e-05    & eve bit error: 31.762108\n",
            "  epochs:  465   bob bit error:  0.00066648424  +  1.0746307e-06    & eve bit error: 31.899311\n",
            "  epochs:  466   bob bit error:  0.0006576122  +  1.9768752e-06    & eve bit error: 31.890753\n",
            "  epochs:  467   bob bit error:  0.00064870785  +  7.4037877e-07    & eve bit error: 31.952175\n",
            "  epochs:  468   bob bit error:  0.0006387874  +  9.829506e-08    & eve bit error: 31.935026\n",
            "  epochs:  469   bob bit error:  0.0006293128  +  1.0472496e-06    & eve bit error: 31.905212\n",
            "  epochs:  470   bob bit error:  0.00062088296  +  4.3909563e-06    & eve bit error: 31.858253\n",
            "  epochs:  471   bob bit error:  0.0006104361  +  3.1355016e-06    & eve bit error: 31.974081\n",
            "  epochs:  472   bob bit error:  0.00060073356  +  3.2410753e-06    & eve bit error: 31.98832\n",
            "  epochs:  473   bob bit error:  0.00059127575  +  1.0581351e-06    & eve bit error: 31.93785\n",
            "  epochs:  474   bob bit error:  0.000582078  +  5.207903e-06    & eve bit error: 31.87127\n",
            "  epochs:  475   bob bit error:  0.00057354337  +  3.5399353e-07    & eve bit error: 31.946697\n",
            "  epochs:  476   bob bit error:  0.000565503  +  1.49886e-06    & eve bit error: 31.963736\n",
            "  epochs:  477   bob bit error:  0.0005571274  +  6.089209e-08    & eve bit error: 31.915369\n",
            "  epochs:  478   bob bit error:  0.00054899487  +  4.1071326e-07    & eve bit error: 31.913036\n",
            "  epochs:  479   bob bit error:  0.0005411543  +  5.7319767e-07    & eve bit error: 31.958672\n",
            "  epochs:  480   bob bit error:  0.0005334122  +  7.656183e-09    & eve bit error: 31.9312\n",
            "  epochs:  481   bob bit error:  0.00052391784  +  1.9718449e-07    & eve bit error: 31.9268\n",
            "  epochs:  482   bob bit error:  0.0005156386  +  1.7502884e-06    & eve bit error: 31.885834\n",
            "  epochs:  483   bob bit error:  0.00050793216  +  6.017937e-06    & eve bit error: 31.865276\n",
            "  epochs:  484   bob bit error:  0.00049879984  +  1.5326385e-05    & eve bit error: 31.810444\n",
            "  epochs:  485   bob bit error:  0.0004908608  +  7.2812105e-07    & eve bit error: 31.962822\n",
            "  epochs:  486   bob bit error:  0.0004832826  +  2.0107084e-08    & eve bit error: 31.936413\n",
            "  epochs:  487   bob bit error:  0.00047521014  +  7.9417305e-08    & eve bit error: 31.94573\n",
            "  epochs:  488   bob bit error:  0.00046775443  +  3.554337e-08    & eve bit error: 31.910622\n",
            "  epochs:  489   bob bit error:  0.0004606638  +  2.9041491e-06    & eve bit error: 31.882433\n",
            "  epochs:  490   bob bit error:  0.00045383722  +  5.579573e-07    & eve bit error: 31.95131\n",
            "  epochs:  491   bob bit error:  0.00044808746  +  8.754347e-08    & eve bit error: 31.933378\n",
            "  epochs:  492   bob bit error:  0.00044126087  +  6.435523e-06    & eve bit error: 31.860579\n",
            "  epochs:  493   bob bit error:  0.0004338622  +  6.9247158e-06    & eve bit error: 31.85626\n",
            "  epochs:  494   bob bit error:  0.0004276943  +  2.0494338e-06    & eve bit error: 31.95869\n",
            "  epochs:  495   bob bit error:  0.0004201515  +  4.327737e-06    & eve bit error: 31.872683\n",
            "  epochs:  496   bob bit error:  0.00041310862  +  2.1725697e-09    & eve bit error: 31.944166\n",
            "  epochs:  497   bob bit error:  0.00040654442  +  4.1262865e-06    & eve bit error: 31.978813\n",
            "  epochs:  498   bob bit error:  0.00040050247  +  1.1145394e-06    & eve bit error: 31.9748\n",
            "  epochs:  499   bob bit error:  0.00039392826  +  2.4123615e-06    & eve bit error: 31.981861\n"
          ]
        }
      ],
      "source": [
        "# Training begins\n",
        "table = []\n",
        "temp_alice_bob_loss = 4\n",
        "i=0\n",
        "while i < epochs:\n",
        "\n",
        "\n",
        "  for j in range(steps_per_epoch): #steps per epoch = samplesize/BATCH_SIZE\n",
        "\n",
        "    # get batch dataset to train\n",
        "    batch_messages = messages[j*batch_size: (j+1)*batch_size]\n",
        "    batch_keys     = keys[j*batch_size: (j+1)*batch_size]\n",
        "\n",
        "    # Train Alice and Bob\n",
        "    for _ in range(ITERS_PER_ACTOR):\n",
        "      temp = sess.run([bob_opt, Bob_loss, Eve_evadropping_loss, Bob_out_message],\n",
        "                      feed_dict={Alice_input_message:batch_messages , Alice_input_key:batch_keys })\n",
        "\n",
        "      temp_alice_bob_loss = temp[1]\n",
        "      temp_eve_evs_loss   = temp[2]\n",
        "      temp_bob_msg        = temp[3]\n",
        "\n",
        "    # train Eve\n",
        "    for _ in range(ITERS_PER_ACTOR*EVE_MULTIPLIER):\n",
        "      temp = sess.run([Eve_opt, Eves_loss, Eve_out_message], feed_dict={Alice_input_message:batch_messages , Alice_input_key:batch_keys })\n",
        "\n",
        "      temp_eve_loss = temp[1]\n",
        "      temp_eve_msg  = temp[2]\n",
        "\n",
        "    table.append([i,temp_alice_bob_loss,temp_eve_loss,temp_alice_bob_loss + temp_eve_evs_loss])\n",
        "\n",
        "  # save after every 500 epochs\n",
        "  if i%500 == 0 and i!=0:\n",
        "    alice_saver.save(sess, \"weights/alice_weights/model.ckpt\")\n",
        "    bob_saver.save(sess, \"weights/bob_weights/model.ckpt\")\n",
        "    eve_saver.save(sess, \"weights/eve_weights/model.ckpt\")\n",
        "\n",
        "\n",
        "  # output bit error and loss after every 100 epochs\n",
        "  if i%1 == 0:\n",
        "    print('  epochs: ', i, '  bob bit error: ', temp_alice_bob_loss,' + ', temp_eve_evs_loss,'   & eve bit error:', temp_eve_loss)\n",
        "  i=i+1\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5jiqVcRmvtlj"
      },
      "outputs": [],
      "source": [
        "df = pd.DataFrame(table, columns=['Epoch Number', 'Bob Loss', 'Eve Loss','ABE loss'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "MFHOQ3yZtcDs",
        "outputId": "d2d96893-d0ab-47be-9de6-efcdb5ba504a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bob Loss Graph\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       Epoch Number   Bob Loss   Eve Loss   ABE loss\n",
            "0                 0  63.374527  64.335762  64.395760\n",
            "1                 0  64.284058  63.849663  65.274658\n",
            "2                 0  63.234314  64.404999  64.259872\n",
            "3                 0  64.026497  63.986015  65.025620\n",
            "4                 0  64.105896  63.945152  65.102463\n",
            "...             ...        ...        ...        ...\n",
            "15995           499   0.000386  31.783457   0.000412\n",
            "15996           499   0.000385  31.888016   0.000387\n",
            "15997           499   0.000395  31.914431   0.000396\n",
            "15998           499   0.000392  31.714470   0.000449\n",
            "15999           499   0.000394  31.981861   0.000396\n",
            "\n",
            "[16000 rows x 4 columns]\n"
          ]
        }
      ],
      "source": [
        "print(\"Bob Loss Graph\")\n",
        "plt.plot(df[\"Epoch Number\"], df[\"Bob Loss\"], label=\"Bob Loss\")\n",
        "plt.xlabel('Epoch Number')\n",
        "plt.ylabel('Loss')\n",
        "plt.title('Bob Loss Graph')\n",
        "plt.legend()  # Add this line to display the legend\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n",
        "\n",
        "# Print Eve Loss Graph\n",
        "plt.plot(df[\"Epoch Number\"], df[\"Eve Loss\"], label=\"Eve Loss\")\n",
        "plt.xlabel('Epoch Number')\n",
        "plt.ylabel('Loss')\n",
        "plt.title('Eve Loss Graph')\n",
        "plt.legend()  # Add this line to display the legend\n",
        "\n",
        "# Print Eve Loss Graph\n",
        "plt.plot(df[\"Epoch Number\"], df[\"ABE loss\"], label=\"ABE loss\")\n",
        "plt.xlabel('Epoch Number')\n",
        "plt.ylabel('Loss')\n",
        "plt.title('ABE Loss Graph')\n",
        "plt.legend()  # Add this line to display the legend\n",
        "# Show the plot\n",
        "plt.show()\n",
        "\n",
        "plt.show()\n",
        "print(df)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "id": "NxiaAexQwjQt",
        "outputId": "f0e383ef-1a4f-4fa1-8e07-ad2dae723194"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_1a9fcd94-78dc-4e09-b09c-133cb991793b\", \"insert_name.xlsx\", 805422)"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "df.to_excel('insert_name.xlsx')\n",
        "from google.colab import files\n",
        "files.download('insert_name.xlsx')"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
